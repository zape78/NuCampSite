{"ast":null,"code":"import { COMMENTS } from '../../app/shared/COMMENTS';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  commentsArray: COMMENTS\n};\nconst commentsSlice = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {\n    addComment: (state, action) => {\n      console.log('addComment action.payload', action.payload);\n      console.log('addComment state.commentsArray', state.commentsArray);\n      const newComment = {\n        id: state.commentsArray.length + 1,\n        ...action.payload\n      };\n      state.commentsArray.push(newComment);\n    }\n  }\n});\nexport const commentsReducer = commentsSlice.reducer;\nexport const {\n  addComment\n} = commentsSlice.actions;\nexport const selectCommentsByCampsiteId = campsiteId => state => {\n  return state.comments.commentsArray.filter(comment => comment.campsiteId === parseInt(campsiteId));\n};","map":{"version":3,"sources":["/Users/bzapien/Desktop/NucampFolder/WebDev/3-React/NuCampSite/src/features/comments/commentsSlice.js"],"names":["COMMENTS","createSlice","initialState","commentsArray","commentsSlice","name","reducers","addComment","state","action","console","log","payload","newComment","id","length","push","commentsReducer","reducer","actions","selectCommentsByCampsiteId","campsiteId","comments","filter","comment","parseInt"],"mappings":"AAAA,SAASA,QAAT,QAAyB,2BAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAEH;AADE,CAArB;AAIA,MAAMI,aAAa,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,UADwB;AAE9BH,EAAAA,YAF8B;AAG9BI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,MAAM,CAACG,OAAhD;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CH,KAAK,CAACL,aAApD;AACA,YAAMU,UAAU,GAAG;AACfC,QAAAA,EAAE,EAAEN,KAAK,CAACL,aAAN,CAAoBY,MAApB,GAA6B,CADlB;AAEf,WAAGN,MAAM,CAACG;AAFK,OAAnB;AAIAJ,MAAAA,KAAK,CAACL,aAAN,CAAoBa,IAApB,CAAyBH,UAAzB;AACH;AATK;AAHoB,CAAD,CAAjC;AAgBA,OAAO,MAAMI,eAAe,GAAGb,aAAa,CAACc,OAAtC;AAEP,OAAO,MAAM;AAAEX,EAAAA;AAAF,IAAiBH,aAAa,CAACe,OAArC;AAEP,OAAO,MAAMC,0BAA0B,GAAIC,UAAD,IAAiBb,KAAD,IAAW;AACjE,SAAOA,KAAK,CAACc,QAAN,CAAenB,aAAf,CAA6BoB,MAA7B,CACFC,OAAD,IAAaA,OAAO,CAACH,UAAR,KAAuBI,QAAQ,CAACJ,UAAD,CADzC,CAAP;AAGH,CAJM","sourcesContent":["import { COMMENTS } from '../../app/shared/COMMENTS';\nimport { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    commentsArray: COMMENTS\n};\n\nconst commentsSlice = createSlice({\n    name: 'comments',\n    initialState,\n    reducers: {\n        addComment: (state, action) => {\n            console.log('addComment action.payload', action.payload);\n            console.log('addComment state.commentsArray', state.commentsArray);\n            const newComment = {\n                id: state.commentsArray.length + 1,\n                ...action.payload\n            };\n            state.commentsArray.push(newComment);\n        }\n    }\n});\n\nexport const commentsReducer = commentsSlice.reducer;\n\nexport const { addComment } = commentsSlice.actions;\n\nexport const selectCommentsByCampsiteId = (campsiteId) => (state) => {\n    return state.comments.commentsArray.filter(\n        (comment) => comment.campsiteId === parseInt(campsiteId)\n    );\n};\n"]},"metadata":{},"sourceType":"module"}